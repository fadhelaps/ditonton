// Mocks generated by Mockito 5.0.8 from annotations
// in ditonton/test/helpers/test_helper.dart.
// Do not manually edit this file.

import 'dart:async' as _i17;
import 'dart:convert' as _i8;
import 'dart:typed_data' as _i9;

import 'package:dartz/dartz.dart' as _i12;
import 'package:core/core.dart' as _i18;
import 'package:core/data/datasources/db/database_helper.dart' as _i5;
import 'package:tv_series/data/datasources/tv_series_local_data_source.dart' as _i3;
import 'package:tv_series/data/datasources/tv_series_remote_data_source.dart' as _i1;
import 'package:tv_series/data/models/tv_series_detail_model.dart' as _i13;
import 'package:tv_series/data/models/tv_series_model.dart' as _i2;
import 'package:tv_series/data/models/tv_series_table.dart' as _i4;
import 'package:tv_series/domain/entities/tv_series.dart' as _i19;
import 'package:tv_series/domain/entities/tv_series_detail.dart' as _i0;
import 'package:tv_series/domain/repositories/tv_series_repository.dart' as _i16;
import 'package:http/src/base_request.dart' as _i20;
import 'package:http/io_client.dart' as _i7;
import 'package:http/src/response.dart' as _i14;
import 'package:mockito/mockito.dart' as _i11;
import 'package:sqflite_sqlcipher/sqflite.dart' as _i6;
import 'package:tv_series/data/models/tv_series_table.dart' as _i15;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeEither<L, R> extends _i11.Fake implements _i12.Either<L, R> {}

class _FakeTvDetailResponse extends _i11.Fake implements _i13.TvSeriesDetailResponse {}

class _FakeResponse extends _i11.Fake implements _i14.Response {}

class _FakeIOStreamedResponse extends _i11.Fake
    implements _i7.IOStreamedResponse {}

/// A class which mocks [TVRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvSeriesRepository extends _i11.Mock implements _i16.TvSeriesRepository {
  MockTvSeriesRepository() {
    _i11.throwOnMissingStub(this);
  }

  @override
  _i17.Future<_i12.Either<_i18.Failure, List<_i19.TvSeries>>> getNowPlayingTvSeries() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingTvSeries, []),
          returnValue: Future<_i12.Either<_i18.Failure, List<_i19.TvSeries>>>.value(
              _FakeEither<_i18.Failure, List<_i19.TvSeries>>()))
      as _i17.Future<_i12.Either<_i18.Failure, List<_i19.TvSeries>>>);
  @override
  _i17.Future<_i12.Either<_i18.Failure, List<_i19.TvSeries>>> getPopularTvSeries() =>
      (super.noSuchMethod(Invocation.method(#getPopularTvSeries, []),
          returnValue: Future<_i12.Either<_i18.Failure, List<_i19.TvSeries>>>.value(
              _FakeEither<_i18.Failure, List<_i19.TvSeries>>()))
      as _i17.Future<_i12.Either<_i18.Failure, List<_i19.TvSeries>>>);
  @override
  _i17.Future<_i12.Either<_i18.Failure, List<_i19.TvSeries>>> getTopRatedTvSeries() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedTvSeries, []),
          returnValue: Future<_i12.Either<_i18.Failure, List<_i19.TvSeries>>>.value(
              _FakeEither<_i18.Failure, List<_i19.TvSeries>>()))
      as _i17.Future<_i12.Either<_i18.Failure, List<_i19.TvSeries>>>);
  @override
  _i17.Future<_i12.Either<_i18.Failure, _i0.TvSeriesDetail>> getTvSeriesDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvDetail, [id]),
          returnValue: Future<_i12.Either<_i18.Failure, _i0.TvSeriesDetail>>.value(
              _FakeEither<_i18.Failure, _i0.TvSeriesDetail>()))
      as _i17.Future<_i12.Either<_i18.Failure, _i0.TvSeriesDetail>>);
  @override
  _i17.Future<_i12.Either<_i18.Failure, List<_i19.TvSeries>>> getTvSeriesRecommendations(
      int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvSeriesRecommendations, [id]),
          returnValue: Future<_i12.Either<_i18.Failure, List<_i19.TvSeries>>>.value(
              _FakeEither<_i18.Failure, List<_i19.TvSeries>>()))
      as _i17.Future<_i12.Either<_i18.Failure, List<_i19.TvSeries>>>);
  @override
  _i17.Future<_i12.Either<_i18.Failure, List<_i19.TvSeries>>> searchTvSeries(String? query) =>
      (super.noSuchMethod(Invocation.method(#searchTvSeries, [query]),
          returnValue: Future<_i12.Either<_i18.Failure, List<_i19.TvSeries>>>.value(
              _FakeEither<_i18.Failure, List<_i19.TvSeries>>()))
      as _i17.Future<_i12.Either<_i18.Failure, List<_i19.TvSeries>>>);
  @override
  _i17.Future<_i12.Either<_i18.Failure, String>> saveWatchlist(
      _i0.TvSeriesDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlist, [tv]),
          returnValue: Future<_i12.Either<_i18.Failure, String>>.value(
              _FakeEither<_i18.Failure, String>()))
      as _i17.Future<_i12.Either<_i18.Failure, String>>);
  @override
  _i17.Future<_i12.Either<_i18.Failure, String>> removeWatchlist(
      _i0.TvSeriesDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [tv]),
          returnValue: Future<_i12.Either<_i18.Failure, String>>.value(
              _FakeEither<_i18.Failure, String>()))
      as _i17.Future<_i12.Either<_i18.Failure, String>>);
  @override
  _i17.Future<bool> isAddedToWatchlist(int? id) =>
      (super.noSuchMethod(Invocation.method(#isAddedToWatchlist, [id]),
          returnValue: Future<bool>.value(false)) as _i17.Future<bool>);
  @override
  _i17.Future<_i12.Either<_i18.Failure, List<_i19.TvSeries>>> getWatchlistTvSeries() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTvSeries, []),
          returnValue: Future<_i12.Either<_i18.Failure, List<_i19.TvSeries>>>.value(
              _FakeEither<_i18.Failure, List<_i19.TvSeries>>()))
      as _i17.Future<_i12.Either<_i18.Failure, List<_i19.TvSeries>>>);
}

/// A class which mocks [TVRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvSeriesRemoteDataSource extends _i11.Mock
    implements _i1.TvSeriesRemoteDataSource {
  MockTvSeriesRemoteDataSource() {
    _i11.throwOnMissingStub(this);
  }

  @override
  _i17.Future<List<_i2.TvSeriesModel>> getNowPlayingTvSeries() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingTvSeries, []),
          returnValue: Future<List<_i2.TvSeriesModel>>.value(<_i2.TvSeriesModel>[]))
      as _i17.Future<List<_i2.TvSeriesModel>>);
  @override
  _i17.Future<List<_i2.TvSeriesModel>> getPopularTvSeries() =>
      (super.noSuchMethod(Invocation.method(#getPopularTvSeries, []),
          returnValue: Future<List<_i2.TvSeriesModel>>.value(<_i2.TvSeriesModel>[]))
      as _i17.Future<List<_i2.TvSeriesModel>>);
  @override
  _i17.Future<List<_i2.TvSeriesModel>> getTopRatedTvSeries() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedTvSeries, []),
          returnValue: Future<List<_i2.TvSeriesModel>>.value(<_i2.TvSeriesModel>[]))
      as _i17.Future<List<_i2.TvSeriesModel>>);
  @override
  _i17.Future<_i13.TvSeriesDetailResponse> getTvSeriesDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvDetail, [id]),
          returnValue:
          Future<_i13.TvSeriesDetailResponse>.value(_FakeTvDetailResponse()))
      as _i17.Future<_i13.TvSeriesDetailResponse>);
  @override
  _i17.Future<List<_i2.TvSeriesModel>> getTvSeriesRecommendations(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvSeriesRecommendations, [id]),
          returnValue: Future<List<_i2.TvSeriesModel>>.value(<_i2.TvSeriesModel>[]))
      as _i17.Future<List<_i2.TvSeriesModel>>);
  @override
  _i17.Future<List<_i2.TvSeriesModel>> searchTvSeries(String? query) =>
      (super.noSuchMethod(Invocation.method(#searchTvSeries, [query]),
          returnValue: Future<List<_i2.TvSeriesModel>>.value(<_i2.TvSeriesModel>[]))
      as _i17.Future<List<_i2.TvSeriesModel>>);
}

/// A class which mocks [TVLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvSeriesLocalDataSource extends _i11.Mock implements _i3.TvSeriesLocalDataSource {
  MockTvSeriesLocalDataSource() {
    _i11.throwOnMissingStub(this);
  }

  @override
  _i17.Future<String> insertWatchlist(_i4.TvSeriesTable? tv) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlist, [tv]),
          returnValue: Future<String>.value('')) as _i17.Future<String>);
  @override
  _i17.Future<String> removeWatchlist(_i4.TvSeriesTable? tv) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [tv]),
          returnValue: Future<String>.value('')) as _i17.Future<String>);
  @override
  _i17.Future<_i4.TvSeriesTable?> getTvSeriesById(int? id) => (super.noSuchMethod(
      Invocation.method(#getTvSeriesById, [id]),
      returnValue: Future<_i4.TvSeriesTable?>.value()) as _i17.Future<_i4.TvSeriesTable?>);
  @override
  _i17.Future<List<_i4.TvSeriesTable>> getWatchlistTvSeries() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTvSeries, []),
          returnValue: Future<List<_i4.TvSeriesTable>>.value(<_i4.TvSeriesTable>[]))
      as _i17.Future<List<_i4.TvSeriesTable>>);
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i11.Mock implements _i5.DatabaseHelper {
  MockDatabaseHelper() {
    _i11.throwOnMissingStub(this);
  }

  @override
  _i17.Future<_i6.Database?> get database =>
      (super.noSuchMethod(Invocation.getter(#database),
          returnValue: Future<_i6.Database?>.value())
      as _i17.Future<_i6.Database?>);
  @override
  _i17.Future<int> insertWatchlistTvSeries(_i4.TvSeriesTable? tv) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlistTv, [tv]),
          returnValue: Future<int>.value(0)) as _i17.Future<int>);
  @override
  _i17.Future<int> removeWatchlistTvSeries(_i4.TvSeriesTable? tv) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [tv]),
          returnValue: Future<int>.value(0)) as _i17.Future<int>);
  @override
  _i17.Future<Map<String, dynamic>?> getTvSeriesById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvSeriesById, [id]),
          returnValue: Future<Map<String, dynamic>?>.value())
      as _i17.Future<Map<String, dynamic>?>);
  @override
  _i17.Future<List<Map<String, dynamic>>> getWatchlistTvSeries() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTvSeries, []),
          returnValue: Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[]))
      as _i17.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [IOClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockIOClient extends _i11.Mock implements _i7.IOClient {
  MockIOClient() {
    _i11.throwOnMissingStub(this);
  }

  @override
  _i17.Future<_i14.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#head, [url], {#headers: headers}),
          returnValue: Future<_i14.Response>.value(_FakeResponse()))
      as _i17.Future<_i14.Response>);
  @override
  _i17.Future<_i14.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#get, [url], {#headers: headers}),
          returnValue: Future<_i14.Response>.value(_FakeResponse()))
      as _i17.Future<_i14.Response>);
  @override
  _i17.Future<_i14.Response> post(Uri? url,
      {Map<String, String>? headers,
        Object? body,
        _i8.Encoding? encoding}) =>
      (super.noSuchMethod(
          Invocation.method(#post, [url],
              {#headers: headers, #body: body, #encoding: encoding}),
          returnValue: Future<_i14.Response>.value(_FakeResponse()))
      as _i17.Future<_i14.Response>);
  @override
  _i17.Future<_i14.Response> put(Uri? url,
      {Map<String, String>? headers,
        Object? body,
        _i8.Encoding? encoding}) =>
      (super.noSuchMethod(
          Invocation.method(#put, [url],
              {#headers: headers, #body: body, #encoding: encoding}),
          returnValue: Future<_i14.Response>.value(_FakeResponse()))
      as _i17.Future<_i14.Response>);
  @override
  _i17.Future<_i14.Response> patch(Uri? url,
      {Map<String, String>? headers,
        Object? body,
        _i8.Encoding? encoding}) =>
      (super.noSuchMethod(
          Invocation.method(#patch, [url],
              {#headers: headers, #body: body, #encoding: encoding}),
          returnValue: Future<_i14.Response>.value(_FakeResponse()))
      as _i17.Future<_i14.Response>);
  @override
  _i17.Future<_i14.Response> delete(Uri? url,
      {Map<String, String>? headers,
        Object? body,
        _i8.Encoding? encoding}) =>
      (super.noSuchMethod(
          Invocation.method(#delete, [url],
              {#headers: headers, #body: body, #encoding: encoding}),
          returnValue: Future<_i14.Response>.value(_FakeResponse()))
      as _i17.Future<_i14.Response>);
  @override
  _i17.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#read, [url], {#headers: headers}),
          returnValue: Future<String>.value('')) as _i17.Future<String>);
  @override
  _i17.Future<_i9.Uint8List> readBytes(Uri? url,
      {Map<String, String>? headers}) =>
      (super.noSuchMethod(
          Invocation.method(#readBytes, [url], {#headers: headers}),
          returnValue: Future<_i9.Uint8List>.value(_i9.Uint8List(0)))
      as _i17.Future<_i9.Uint8List>);
  @override
  _i17.Future<_i7.IOStreamedResponse> send(_i20.BaseRequest? request) =>
      (super.noSuchMethod(Invocation.method(#send, [request]),
          returnValue: Future<_i7.IOStreamedResponse>.value(
              _FakeIOStreamedResponse()))
      as _i17.Future<_i7.IOStreamedResponse>);
  @override
  String toString() => super.toString();
}
